002_Abhijeet_Pawar

Assignment day 6

Q1.Inheritance 

package day6;
interface MouseHandler
{
	void mouseClicked();
	void mousePressed();
	void mouseReleased();
}
interface WindowHandler
{
	void windowClosing();
	void windowClosed();
}

class WindowGUIApp implements MouseHandler,WindowHandler
{
	public void mouseClicked() {
		System.out.println("mouseClicked");
	}
	public void mousePressed() {
		System.out.println("mousePressed");
	}
	public void mouseReleased() {
		System.out.println("mouseReleased");
	}
	public void windowClosing() {
		System.out.println("windowClosing");
	}
	public void windowClosed() {
		System.out.println("windowClosed");
	}
}

public class GUIDemo
{
	public static void main(String args[])
	{
		WindowGUIApp w=new WindowGUIApp();
		w.mouseClicked();
		w.mousePressed();
		w.mouseReleased();
		w.windowClosing();
		w.windowClosed();
	}
}

************************************************************************************************f
Q2.Inheritance 
Devloper Code:

package devloperpack;
public interface Shape {
	
	public void draw();
}

package devpack;

public class Circle implements Shape {

	public void draw() {
		System.out.println("Circle Draw");
	}
}

package devloperpack;

public class Rect implements Shape{
	
	public void draw() {
		System.out.println("Rectanlge Draw");
	}
}


package devloperpack;
public class Triangle implements Shape{
	public void draw() {
		System.out.println("Triangle Draw");
	}
}


Client Code:
package clientpack;
import devloperpack.*;

public class ShapeDemo {

	public static void main(String[] args) {
		Shape arr[]=new Shape[3];
		arr[0]=new Circle();
		arr[1]=new Rect();
		arr[2]=new Triangle();
		
		for (int i=0;i<arr.length;i++) {
			arr[i].draw();
		}
	}

}

************************************************************************************************
Q.Inheritance 2
Devloper Code:

package devpack;

public interface PersistenceMechanism {
	
	public void writeData(String ref);

	public String readData();
}

Client Code:

package ClientPack;
import devloperpack.*;
public class FileSystem implements PersistenceMechanism{
	String s;
	public void writeData(String ref)
	{
		this.s=ref;
	}
	public String readData()
	{
		return s;
	}
}

package ClientPack;
import devloperpack.*;
public class DatabaseSystem implements PersistenceMechanism {
	String s;
	public void writeData(String ref)
	{
		this.s=ref;
	}
	public String readData()
	{
		return s;
	}
}


package ClientPack;
import devloperpack.*;

public class BigdataSystem implements PersistenceMechanism{
	String s;
	public void writeData(String ref)
	{
		this.s=ref;
	}
	public String readData()
	{
		return s;
	}
}



package ClientPack;
import devloperpack.*;

public class Demo {
	public static void main(String[] args) {
		PersistenceMechanism arr[]=new PersistenceMechanism[3];
		arr[0]=new FileSystem();
		arr[1]=new DatabaseSystem();
		arr[2]=new BigdataSystem();
		
		for(int i=0;i<arr.length;i++) {
			if(arr[i] instanceof BigdataSystem) {
				arr[i].writeData("reading data from Bigdata");
				System.out.print(arr[i].readData());
			}
		}
	}

}
******************************************************************************************
4)
//on developer side 
import java.util.Scanner;
interface Vehicle
{
	void changeGear(int a);
	void speedUp(int a);
	void applyBrakes(int a);
}

// on the client side 
class FourWheeler implements Vehicle
{
	public void changeGear(int a)
	{
		System.out.println("change gear of Fourwheeler to "+a);
	}
	public void speedUp(int a)
	{
		System.out.println("speed up the Fourwheeler upto "+a);
	}
	public void applyBrakes(int a)
	{
		System.out.println("apply Brakes to Fourwheeler on "+a);
	}
}
class TwoWheeler implements Vehicle
{
	public void changeGear(int a)
	{
		System.out.println("change gear of Twowheeler to "+a);
	}
	public void speedUp(int a)
	{
		System.out.println("speed up the Twowheeler upto "+a);
	}
	public void applyBrakes(int a)
	{
		System.out.println("apply Brakes to Twowheeler on "+a);
	}
}
public class Demo
{	
	public  static void perform(Vehicle vehicle)
	{
		if(vehicle instanceof FourWheeler)
		{	
			vehicle.changeGear(5);
			vehicle.speedUp(60);
			vehicle.applyBrakes(80);
		}
		else
		{
			vehicle.changeGear(4);
			vehicle.speedUp(40);
			vehicle.applyBrakes(50);
		}
	}
	public static void main(String args[])
	{
		perform(new FourWheeler());
		perform(new TwoWheeler());
	}
}
*************************************************************************************************
5)
inside project 
	package weaponpack

public class Weapon
{
	public void attack()
	{
	
	}
}
public class sword extends Weapon
{
	public void attack()
	{
		System.out.println("Sword Slashing ");
	}
}
public class Bomb extends Weapon
{
	public void attack()
	{
		System.out.println("Bomb blasting ");
	}
}
public class Gun extends Weapon
{
	public void attack()
	{
		System.out.println("Gun firing ")
	}
	public void fillBullets()
	{
		System.out.println("Filling Bullets ");
	}
}
public class Soldier
{
	public void fight(Weapon weapon)
	{
		weapon.attack();
		if(weapon instanceof Gun)
		{
			Gun gun = (gun)weapon;
			gun.fillBullets();
		}
	}
}
	
